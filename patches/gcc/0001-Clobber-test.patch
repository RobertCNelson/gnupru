From 9b4cbc0f807d10346be0d4d99df9b2a85d6faa31 Mon Sep 17 00:00:00 2001
From: Dimitar Dimitrov <dimitar@dinux.eu>
Date: Fri, 22 Jun 2018 06:35:42 +0300
Subject: [PATCH 1/4] Clobber test

Signed-off-by: Dimitar Dimitrov <dimitar@dinux.eu>
---
 gcc/testsuite/gcc.target/pru/clobber-sp.c | 34 +++++++++++++++++++++++
 1 file changed, 34 insertions(+)
 create mode 100644 gcc/testsuite/gcc.target/pru/clobber-sp.c

diff --git a/gcc/testsuite/gcc.target/pru/clobber-sp.c b/gcc/testsuite/gcc.target/pru/clobber-sp.c
new file mode 100644
index 00000000000..27dcf6058d5
--- /dev/null
+++ b/gcc/testsuite/gcc.target/pru/clobber-sp.c
@@ -0,0 +1,34 @@
+/* Test inline ASM clobber for SP register */
+
+/* { dg-do run } */
+/* { dg-options "-O1" } */
+
+/* -O1 in the options is significant.  */
+
+extern void abort (void);
+
+int
+test1 (void)
+{
+  int res;
+
+  asm volatile(
+	       "ldi	%[res], 101		\n\t"
+	       "ldi32	sp, 0xaa55aa55		\n\t"
+	       : [res] "=r" (res)
+	       :
+	       : "sp");
+   /* { dg-warning "listing the stack pointer register '%sp' in a clobber list is deprecated" } */
+  /* { dg-message "note: the value of the stack pointer after an 'asm' statement must be the same as it was before the statement" "" { target *-*-* } .-1 } */
+
+  return res;
+}
+
+int
+main (int argc, char** argv)
+{
+  if (test1 () != 101)
+    abort();
+
+  return 0;
+}
-- 
2.20.1


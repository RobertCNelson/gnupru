From 55943fdbf32b7a1fb6ebcc53d2140fa6273ec031 Mon Sep 17 00:00:00 2001
From: Dimitar Dimitrov <dimitar@dinux.eu>
Date: Mon, 4 Jun 2018 08:06:23 +0300
Subject: [PATCH 7/7] Revert "PRU: HACK: Add ABI compatibility functions"

This reverts commit 93cfc44d4e9ba69468959e458bf1db239feec8b0.
---
 newlib/libc/include/math.h    | 37 -------------------------------------
 newlib/libm/common/s_round.c  |  4 +---
 newlib/libm/common/s_trunc.c  |  4 +---
 newlib/libm/common/sf_round.c |  6 +++---
 newlib/libm/common/sf_trunc.c |  4 +---
 5 files changed, 6 insertions(+), 49 deletions(-)

diff --git a/newlib/libc/include/math.h b/newlib/libc/include/math.h
index 545fc652e..1efc5b92c 100644
--- a/newlib/libc/include/math.h
+++ b/newlib/libc/include/math.h
@@ -305,29 +305,10 @@ extern double tgamma (double);
 extern double nearbyint (double);
 extern long int lrint (double);
 extern long long int llrint (double);
-#ifdef __PRU__
-extern double __pruabi_nround (double);
-/* libc++ requires a real function, so cannot use a macro.  */
-static inline __attribute__((always_inline))
-double round (double a)
-{
-  return __pruabi_nround(a);
-}
-#else
 extern double round (double);
-#endif
 extern long int lround (double);
 extern long long int llround (double);
-#ifdef __PRU__
-extern double __pruabi_trunc (double);
-static inline __attribute__((always_inline))
-double trunc (double a)
-{
-  return __pruabi_trunc(a);
-}
-#else
 extern double trunc (double);
-#endif
 extern double remquo (double, double, int *);
 extern double fdim (double, double);
 extern double fmax (double, double);
@@ -394,28 +375,10 @@ extern float tgammaf (float);
 extern float nearbyintf (float);
 extern long int lrintf (float);
 extern long long int llrintf (float);
-#ifdef __PRU__
-extern float __pruabi_roundf (float);
-static inline __attribute__((always_inline))
-float roundf (float a)
-{
-  return __pruabi_roundf(a);
-}
-#else
 extern float roundf (float);
-#endif
 extern long int lroundf (float);
 extern long long int llroundf (float);
-#ifdef __PRU__
-extern float __pruabi_truncf (float);
-static inline __attribute__((always_inline))
-float truncf (float a)
-{
-  return __pruabi_truncf(a);
-}
-#else
 extern float truncf (float);
-#endif
 extern float remquof (float, float, int *);
 extern float fdimf (float, float);
 extern float fmaxf (float, float);
diff --git a/newlib/libm/common/s_round.c b/newlib/libm/common/s_round.c
index 0aabe1234..e3a91d6c2 100644
--- a/newlib/libm/common/s_round.c
+++ b/newlib/libm/common/s_round.c
@@ -45,9 +45,7 @@ SEEALSO
 
 #ifndef _DOUBLE_IS_32BITS
 
-#ifdef __PRU__
-	double __pruabi_nround(double x)
-#elif defined(__STDC__)
+#ifdef __STDC__
 	double round(double x)
 #else
 	double round(x)
diff --git a/newlib/libm/common/s_trunc.c b/newlib/libm/common/s_trunc.c
index e47a5aead..0e06add22 100644
--- a/newlib/libm/common/s_trunc.c
+++ b/newlib/libm/common/s_trunc.c
@@ -42,9 +42,7 @@ ANSI C, POSIX
 
 #ifndef _DOUBLE_IS_32BITS
 
-#ifdef __PRU__
-	double __pruabi_trunc(double x)
-#elif defined(__STDC__)
+#ifdef __STDC__
 	double trunc(double x)
 #else
 	double trunc(x)
diff --git a/newlib/libm/common/sf_round.c b/newlib/libm/common/sf_round.c
index 4917fe29a..c8f1d7733 100644
--- a/newlib/libm/common/sf_round.c
+++ b/newlib/libm/common/sf_round.c
@@ -11,9 +11,9 @@
 
 #include "fdlibm.h"
 
-#ifdef __PRU__
-	float __pruabi_roundf(float x)
-#elif defined(__STDC__)
+#ifdef __STDC__
+	float roundf(float x)
+#else
 	float roundf(x)
 	float x;
 #endif
diff --git a/newlib/libm/common/sf_trunc.c b/newlib/libm/common/sf_trunc.c
index 75207bf13..74ea933ce 100644
--- a/newlib/libm/common/sf_trunc.c
+++ b/newlib/libm/common/sf_trunc.c
@@ -11,9 +11,7 @@
 
 #include "fdlibm.h"
 
-#ifdef __PRU__
-	float __pruabi_truncf(float x)
-#elif defined(__STDC__)
+#ifdef __STDC__
 	float truncf(float x)
 #else
 	float truncf(x)
-- 
2.11.0


From 6ed8ff6939b4c0a4a5c801020b2bc930f7501cdc Mon Sep 17 00:00:00 2001
From: Dimitar Dimitrov <dimitar@dinux.eu>
Date: Mon, 6 May 2019 14:37:23 +0300
Subject: [PATCH 8/8] Fix __init_array_start name

Signed-off-by: Dimitar Dimitrov <dimitar@dinux.eu>
---
 libgloss/pru/crt0.S                               | 2 +-
 libgloss/pru/do_global_dtors.c                    | 4 ++--
 libgloss/pru/ldscripts/pruelf-am335x.pru0.x       | 4 ++--
 libgloss/pru/ldscripts/pruelf-am335x.pru1.x       | 4 ++--
 libgloss/pru/ldscripts/pruelf-am437x.icss0.pru0.x | 4 ++--
 libgloss/pru/ldscripts/pruelf-am437x.icss0.pru1.x | 4 ++--
 libgloss/pru/ldscripts/pruelf-am437x.icss1.pru0.x | 4 ++--
 libgloss/pru/ldscripts/pruelf-am437x.icss1.pru1.x | 4 ++--
 libgloss/pru/ldscripts/pruelf-sim.x               | 4 ++--
 9 files changed, 17 insertions(+), 17 deletions(-)

diff --git a/libgloss/pru/crt0.S b/libgloss/pru/crt0.S
index dc4def820..aa8cf08e0 100644
--- a/libgloss/pru/crt0.S
+++ b/libgloss/pru/crt0.S
@@ -37,7 +37,7 @@ _start:
 	call	atexit
 
 	/* Call constructors. Use non-call-clobbered registers. */
-	ldi	r5, __init_array_begin
+	ldi	r5, __init_array_start
 	ldi	r6, __init_array_end
 ctors_loop:
 	qbeq	ctors_done, r5, r6
diff --git a/libgloss/pru/do_global_dtors.c b/libgloss/pru/do_global_dtors.c
index 4d1621147..d0c01d709 100644
--- a/libgloss/pru/do_global_dtors.c
+++ b/libgloss/pru/do_global_dtors.c
@@ -16,7 +16,7 @@
 #include <_ansi.h>
 #include "syscall.h"
 
-extern void *__fini_array_begin;
+extern void *__fini_array_start;
 extern void *__fini_array_end;
 
 /*
@@ -27,7 +27,7 @@ _do_global_dtors (void)
 {
     /* ABI dictates pointers in init/fini arrays are 16-bit.  */
     const uint16_t *end = (uint16_t *)&__fini_array_end;
-    const uint16_t *begin = (uint16_t *)&__fini_array_begin;
+    const uint16_t *begin = (uint16_t *)&__fini_array_start;
     const uint16_t *p;
     void (**dtor) (void);
 
diff --git a/libgloss/pru/ldscripts/pruelf-am335x.pru0.x b/libgloss/pru/ldscripts/pruelf-am335x.pru0.x
index 39f46ee86..b4228952f 100644
--- a/libgloss/pru/ldscripts/pruelf-am335x.pru0.x
+++ b/libgloss/pru/ldscripts/pruelf-am335x.pru0.x
@@ -103,11 +103,11 @@ SECTIONS
      *(.data.atzero*)
     /* CRT is prepared for constructor/destructor table to have
        a "valid" NULL address.  */
-     __init_array_begin = . ;
+     __init_array_start = . ;
      KEEP (*(SORT_BY_INIT_PRIORITY(.init_array.*)))
      KEEP (*(.init_array))
      __init_array_end = . ;
-     __fini_array_begin = . ;
+     __fini_array_start = . ;
      KEEP (*(SORT_BY_INIT_PRIORITY(.fini_array.*)))
      KEEP (*(.fini_array))
      __fini_array_end = . ;
diff --git a/libgloss/pru/ldscripts/pruelf-am335x.pru1.x b/libgloss/pru/ldscripts/pruelf-am335x.pru1.x
index 39f46ee86..b4228952f 100644
--- a/libgloss/pru/ldscripts/pruelf-am335x.pru1.x
+++ b/libgloss/pru/ldscripts/pruelf-am335x.pru1.x
@@ -103,11 +103,11 @@ SECTIONS
      *(.data.atzero*)
     /* CRT is prepared for constructor/destructor table to have
        a "valid" NULL address.  */
-     __init_array_begin = . ;
+     __init_array_start = . ;
      KEEP (*(SORT_BY_INIT_PRIORITY(.init_array.*)))
      KEEP (*(.init_array))
      __init_array_end = . ;
-     __fini_array_begin = . ;
+     __fini_array_start = . ;
      KEEP (*(SORT_BY_INIT_PRIORITY(.fini_array.*)))
      KEEP (*(.fini_array))
      __fini_array_end = . ;
diff --git a/libgloss/pru/ldscripts/pruelf-am437x.icss0.pru0.x b/libgloss/pru/ldscripts/pruelf-am437x.icss0.pru0.x
index cbbf3bfec..1533739c3 100644
--- a/libgloss/pru/ldscripts/pruelf-am437x.icss0.pru0.x
+++ b/libgloss/pru/ldscripts/pruelf-am437x.icss0.pru0.x
@@ -103,11 +103,11 @@ SECTIONS
      *(.data.atzero*)
     /* CRT is prepared for constructor/destructor table to have
        a "valid" NULL address.  */
-     __init_array_begin = . ;
+     __init_array_start = . ;
      KEEP (*(SORT_BY_INIT_PRIORITY(.init_array.*)))
      KEEP (*(.init_array))
      __init_array_end = . ;
-     __fini_array_begin = . ;
+     __fini_array_start = . ;
      KEEP (*(SORT_BY_INIT_PRIORITY(.fini_array.*)))
      KEEP (*(.fini_array))
      __fini_array_end = . ;
diff --git a/libgloss/pru/ldscripts/pruelf-am437x.icss0.pru1.x b/libgloss/pru/ldscripts/pruelf-am437x.icss0.pru1.x
index cbbf3bfec..1533739c3 100644
--- a/libgloss/pru/ldscripts/pruelf-am437x.icss0.pru1.x
+++ b/libgloss/pru/ldscripts/pruelf-am437x.icss0.pru1.x
@@ -103,11 +103,11 @@ SECTIONS
      *(.data.atzero*)
     /* CRT is prepared for constructor/destructor table to have
        a "valid" NULL address.  */
-     __init_array_begin = . ;
+     __init_array_start = . ;
      KEEP (*(SORT_BY_INIT_PRIORITY(.init_array.*)))
      KEEP (*(.init_array))
      __init_array_end = . ;
-     __fini_array_begin = . ;
+     __fini_array_start = . ;
      KEEP (*(SORT_BY_INIT_PRIORITY(.fini_array.*)))
      KEEP (*(.fini_array))
      __fini_array_end = . ;
diff --git a/libgloss/pru/ldscripts/pruelf-am437x.icss1.pru0.x b/libgloss/pru/ldscripts/pruelf-am437x.icss1.pru0.x
index 39f46ee86..b4228952f 100644
--- a/libgloss/pru/ldscripts/pruelf-am437x.icss1.pru0.x
+++ b/libgloss/pru/ldscripts/pruelf-am437x.icss1.pru0.x
@@ -103,11 +103,11 @@ SECTIONS
      *(.data.atzero*)
     /* CRT is prepared for constructor/destructor table to have
        a "valid" NULL address.  */
-     __init_array_begin = . ;
+     __init_array_start = . ;
      KEEP (*(SORT_BY_INIT_PRIORITY(.init_array.*)))
      KEEP (*(.init_array))
      __init_array_end = . ;
-     __fini_array_begin = . ;
+     __fini_array_start = . ;
      KEEP (*(SORT_BY_INIT_PRIORITY(.fini_array.*)))
      KEEP (*(.fini_array))
      __fini_array_end = . ;
diff --git a/libgloss/pru/ldscripts/pruelf-am437x.icss1.pru1.x b/libgloss/pru/ldscripts/pruelf-am437x.icss1.pru1.x
index 39f46ee86..b4228952f 100644
--- a/libgloss/pru/ldscripts/pruelf-am437x.icss1.pru1.x
+++ b/libgloss/pru/ldscripts/pruelf-am437x.icss1.pru1.x
@@ -103,11 +103,11 @@ SECTIONS
      *(.data.atzero*)
     /* CRT is prepared for constructor/destructor table to have
        a "valid" NULL address.  */
-     __init_array_begin = . ;
+     __init_array_start = . ;
      KEEP (*(SORT_BY_INIT_PRIORITY(.init_array.*)))
      KEEP (*(.init_array))
      __init_array_end = . ;
-     __fini_array_begin = . ;
+     __fini_array_start = . ;
      KEEP (*(SORT_BY_INIT_PRIORITY(.fini_array.*)))
      KEEP (*(.fini_array))
      __fini_array_end = . ;
diff --git a/libgloss/pru/ldscripts/pruelf-sim.x b/libgloss/pru/ldscripts/pruelf-sim.x
index 353c187b8..72d3bd7ea 100644
--- a/libgloss/pru/ldscripts/pruelf-sim.x
+++ b/libgloss/pru/ldscripts/pruelf-sim.x
@@ -103,11 +103,11 @@ SECTIONS
      *(.data.atzero*)
     /* CRT is prepared for constructor/destructor table to have
        a "valid" NULL address.  */
-     __init_array_begin = . ;
+     __init_array_start = . ;
      KEEP (*(SORT_BY_INIT_PRIORITY(.init_array.*)))
      KEEP (*(.init_array))
      __init_array_end = . ;
-     __fini_array_begin = . ;
+     __fini_array_start = . ;
      KEEP (*(SORT_BY_INIT_PRIORITY(.fini_array.*)))
      KEEP (*(.fini_array))
      __fini_array_end = . ;
-- 
2.11.0

